apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.name }}
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: {{ .Values.replicaCount }}
  selector:
      matchLabels:
        app: {{ .Release.Name }}-{{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.name }}
      annotations:
        prometheus.io/path: {{ .Values.metrics.path }}
        prometheus.io/port: {{ .Values.port | quote }}
        prometheus.io/scrape: {{ .Values.metrics.enabled | quote }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
          volumeMounts:
            - name: kafka-secrets-volume
              mountPath: /secrets
          ports:
            - containerPort: {{ .Values.port }}
          env:
            - name: PORT
              value: {{ .Values.port | squote }}  
            - name: KAFKA_BROKER
              value: {{ .Values.broker }}
            {{- if .Values.readinessTopic }}
            - name: READINESS_TOPIC
              value: {{ .Values.readinessTopic }}
            {{- end }}
            - name: USE_PROMETHEUS
              value: {{ .Values.metrics.enabled | squote }}
            - name: MONITORING_SERVER_PORT
              value: {{ .Values.port | squote }}        
            - name: SECURITY_PROTOCOL
              value: SASL_SSL
            - name: SASL_USERNAME
              value: {{ .Values.auth.saslUsername | squote }}
            {{- if .Values.auth.saslPassword }}
            - name: SASL_PASSWORD
              value: {{ .Values.auth.saslPassword | squote }}
            {{- else if .Values.auth.useOpaqueSecrets }}
            - name: SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-kafka-producer
                  key: SASL_PASSWORD
            {{- else }}                  
            - name: SASL_PASSWORD_FILE_PATH
              value: {{ .Values.auth.saslPasswordFilePath| squote }}
            {{- end }}
            {{- if .Values.auth.truststore }}
            - name: TRUSTSTORE_FILE_PATH
              value: /secrets/truststore
            {{- if .Values.auth.useOpaqueSecrets}}
            - name: TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-kafka-producer
                  key: TRUSTSTORE_PASSWORD
            {{- else }}
            - name: TRUSTSTORE_PASSWORD_FILE_PATH
              value: /secrets/TRUSTSTORE_PASSWORD                  
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheckPath | squote }}
              port: {{ .Values.port }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheckPath | squote }}
              port: {{ .Values.port }}       
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{if not .Values.auth.saslPassword }}
      volumes:
        - name: kafka-secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Release.Name }}-kafka-producer
{{ end }
