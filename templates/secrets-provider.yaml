{{ if not .Values.auth.saslPassword }}
apiVersion: secrets-store.csi.x-k8s.io/v1alpha1
kind: SecretProviderClass
metadata:
  name: {{ .Release.Name }}-kafka-producer
spec:
  provider: {{ .Values.auth.provider }}
  {{- if .Values.auth.secrets.useOpaqueSecrets}}
  secretObjects:
  - secretName: {{ .Release.Name }}-kafka-producer
    type: Opaque
    data: 
    - objectName: SASL_PASSWORD
      key: SASL_PASSWORD
    {{- if .Values.auth.secrets.useTruststore }}
    - objectName: TRUSTSTORE_PASSWORD
      key: TRUSTSTORE_PASSWORD
    {{- end}}
  {{- end}}  
{{- if eq .Values.auth.provider "gcp"}}
  parameters:
    secrets: >
      - resourceName: "{{ .Values.auth.gcp.saslPasswordResource }}"
        fileName: "SASL_PASSWORD"
      {{- if .Values.auth.secrets.useTruststore }}
      - resourceName: "{{ .Values.auth.gcp.truststore.truststoreResource }}"
        fileName: "TRUSTSTORE"
      - resourceName: "{{ .Values.auth.gcp.truststore.truststorePasswordResource }}"
        fileName: "TRUSTSTORE_PASSWORD"        
      {{- end}}
{{- end}}
{{- if eq .Values.auth.provider "vault"}}
  parameters:
    secrets: >
      - secretPath: "{{ .Values.auth.vault.saslPasswordSecretPath }}"
        secretKey: "{{ .Values.auth.saslPasswordSecretKey }}"
        objectName: "SASL_PASSWORD"
      {{- if .Values.auth.secrets.useTruststore }}
      - secretPath: "{{ .Values.auth.vault.truststoreSecretPath }}"
        secretKey: "{{ .Values.auth.vault.truststoreSecretKey }}"
        objectName: "TRUSTSTORE"
      - secretPath: "{{ .Values.auth.vault.truststorePasswordSecretPath }}"
        secretKey: "{{ .Values.auth.vault.truststorePasswordSecretKey }}"
        objectName: "TRUSTSTORE_PASSWORD"
      {{- end}}
{{- end}}
{{- end}}
