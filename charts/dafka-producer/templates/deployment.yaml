apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.name }}
{{- if .Values.deploymentAnnotations}}
  annotations:
  {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- end}}
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  replicas: {{ .Values.replicaCount }}
  selector:
      matchLabels:
        app: {{ .Release.Name }}-{{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.name }}
      annotations:
        prometheus.io/path: {{ .Values.metrics.path }}
        prometheus.io/port: {{ .Values.port | quote }}
        prometheus.io/scrape: {{ .Values.metrics.enabled | quote }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: {{ .Release.Name }}-{{ .Values.name }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: Always
{{ if .Values.auth.enabled }}
  {{ if not .Values.auth.saslPassword }}
          volumeMounts:
            - name: kafka-secrets-volume
              mountPath: /secrets-files
  {{ end }}
{{ end }}
          ports:
            - containerPort: {{ .Values.port }}
          env:
            - name: PORT
              value: {{ .Values.port | squote }}
            - name: KAFKA_BROKER
              value: {{ .Values.broker }}
            {{ if .values.connectionPool}}
            {{ if .values.connectionPool.maxIdle}}
            - name: CONNECTION_POOL_MAX_IDLE_CONNECTIONS
              value: {{ .values.connectionPool.maxIdle }}
            {{ end }}
            {{ if .values.connectionPool.keepAliveDurationMS}}
            - name: CONNECTION_POOL_KEEP_ALIVE_DURATION_MS
              value: {{ .values.connectionPool.keepAliveDurationMS }}
            {{ end }}
            {{ end }}
            {{ if .Values.jvmOpts }}
            - name: JAVA_OPTS
              value: {{ .Values.jvmOpts | squote }}
            {{ end }}
            {{- if .Values.readinessTopic }}
            - name: READINESS_TOPIC
              value: {{ .Values.readinessTopic }}
            {{- end }}
            {{- if .Values.lingerTimeMs }}
            - name: LINGER_TIME_MS
              value: {{ .Values.lingerTimeMs | squote }}
            {{- end }}
            {{- if .Values.batchSize }}
            - name: BATCH_SIZE
              value: {{ .Values.batchSize }}
            {{- end }}
             {{- if .Values.blockedThreadDetectionEnabled }}
            - name: BLOCKED_THREAD_DETECTION_ENABLED
              value: {{ .Values.blockedThreadDetectionEnabled | squote }}
            {{- end }}
            {{- if .Values.cpuStarvationCheckInitialDelayMs }}
            - name: CPU_STARVATION_CHECK_INITIAL_DELAY_MS
              value: {{ .Values.cpuStarvationCheckInitialDelayMs | squote }}
            {{- end }}
            {{- if .Values.cpuStarvationCheckIntervalMs }}
            - name: CPU_STARVATION_CHECK_INTERVAL_MS
              value: {{ .Values.cpuStarvationCheckIntervalMs | squote }}
            {{- end }}
            {{- if .Values.cpuStarvationCheckThreshold }}
            - name: CPU_STARVATION_CHECK_THRESHOLD
              value: {{ .Values.cpuStarvationCheckThreshold | squote }}
            {{- end }}
            - name: USE_PROMETHEUS
              value: {{ .Values.metrics.enabled | squote }}
            - name: MONITORING_SERVER_PORT
              value: {{ .Values.port | squote }}
            - name: USE_SASL_AUTH
              value: {{ .Values.auth.enabled | squote }}
        {{- if .Values.auth.enabled }}
            - name: SASL_USERNAME
              value: {{ .Values.auth.saslUsername | squote }}
            - name: SASL_MECHANISM
              value: {{ .Values.auth.saslMechanism }}                
            {{- if .Values.auth.saslPassword }}
            - name: SASL_PASSWORD
              value: {{ .Values.auth.saslPassword | squote }}
            {{- else if .Values.auth.secrets.useOpaqueSecrets }}
            - name: SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-kafka-producer
                  key: SASL_PASSWORD
            {{- else }}
            - name: SASL_PASSWORD_FILE_PATH
              value: /secrets-files/SASL_PASSWORD
            {{- end }}
            {{- if .Values.auth.secrets.useTruststore }}
            - name: TRUSTSTORE_FILE_PATH
              value: /secrets-files/TRUSTSTORE
            {{- if .Values.auth.secrets.useOpaqueSecrets}}
            - name: TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-kafka-producer
                  key: TRUSTSTORE_PASSWORD
            {{- else }}
            - name: TRUSTSTORE_PASSWORD_FILE_PATH
              value: /secrets-files/TRUSTSTORE_PASSWORD
            {{- end }}
            {{- end }}
            {{ if .Values.maxBlockMS}}
            - name: MAX_BLOCK_MS
              value: {{ .Values.maxBlockMS }}
            {{ end }}
        {{- end }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            httpGet:
              path: /alive
              port: {{ .Values.port }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.port }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{ if .Values.auth.enabled }}
  {{ if not .Values.auth.saslPassword }}
      volumes:
        - name: kafka-secrets-volume
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Release.Name }}-kafka-producer
  {{ end }}
{{ end }}
